---
title: Spring 개요
layout: post
date: '2018-11-06 00:56:59 +0900'
author: jinow
categories: Spring
cover: "/assets/posts/1.jpg"
---

### Spring Framework 개요

#### 1. 정의
> 자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크  
**Framework** : 틀, 즉 개발자가 개발(기능구현)에만 집중할 수 있도록 틀을 만들어줌  

#### 2. Spring Framework 주요기능
  - **DI** : 의존성 주입 (Dependency Injection)     
  - **AOP** : 관점지향 프로그래밍 (Aspect Oriented Programming)   
  - **MVC** : Model, View, Controller를 분리  

#### 3. 스프링 프레임워크에서 제공하고 있는 모듈
* **spring-core** : 스프링 핵심인 DI 와 IOC를 제공
* **spring-aop** : AOP 구현기능 제공
* **spring-jdbc** : jdbc를 쉽게 다룰 수 있는 기능 제공
* **spring-tx** : 스프링에서 제공하는 트랜젝션 관련기능 제공
* **spring-webmvc** : spring에서 제공하는 Controller, View를 이용한 스프링 MVC 기능구현 제공
> 모듈에 대한 의존 설정은 XML파일을 이용하여 개발자가 직접 관리가 가능하다. (maven 프로젝트)  

#### 4. 스프링 컨테이너 ( IOC - Inversion Of Control )
> 스프링에서 객체를 생성하고 조립하는 컨테이너로, 컨테이를 통해 생성된 객체를 빈(Bean)이라고 부른다.  

![ioc container](/assets/posts/ioc container.png)  


### 개발환경 구축
#### 1.JDK(Java Development Kit), 이클립스 설치   
![jdk](/assets/posts/jdk구조.png)  
 * JDK : Java **개발**을 위한 도구  
 * JRE : Java 프로그램 **실행**을 위한 도구  

 >JDK = JRE + Development Tool (```java```, ```javac```)  
 >JRE = JVM + Library Classes  


#### 2. maven 프로젝트 생성
![maven](/assets/posts/maven생성.png)
 * **group-id** : 프로젝트 식별 id
 * **artifact-id** : 버젼정보를 생략한 jar 파일의 이름
 * **version** : 숫자와 점으로 이루어진 일반적인 버젼형태 (```1.0``` ```1.0.1``` ...)  

#### 3. pom.xml 작성
```
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>spring4</groupId>
	<artifactId>testPjt01</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>utf-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
```
> spring-context 모듈만 작성을 하였지만 그것과 의존관계에 있는 라이브러리를 자동으로 가져온다.


![](/assets/posts/maven로컬경로.png)


#### 4. maven 프로젝트 경로
  * src/main
    - java : 실제 개발할 기능 구현
    - resource : 보조적인 파일, build 및 자원 관련 (```xml```, ```properties```)